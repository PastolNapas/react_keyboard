{"version":3,"sources":["App.tsx","index.tsx"],"names":["Pressed","state","keyupButton","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAyB,CACvBC,YAAa,IAFjB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,YAAaE,EAAME,OAdvC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,OACE,mBAAGQ,UAAU,eAAb,SACGF,KAAKR,MAAMC,YAAX,mCAC+BO,KAAKR,MAAMC,YAD1C,KAEG,gCAtBZ,GAA6BU,IAAMC,WA4BtBC,EAAgB,kBAC3B,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,O,MCjCJI,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.4eeefc3f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {};\n\ntype State = {\n  keyupButton: string;\n};\n\nexport class Pressed extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    keyupButton: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ keyupButton: event.key });\n  };\n\n  render() {\n    return (\n      <p className=\"App__message\">\n        {this.state.keyupButton\n          ? `The last pressed key is [${this.state.keyupButton}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    );\n  }\n}\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <Pressed />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}